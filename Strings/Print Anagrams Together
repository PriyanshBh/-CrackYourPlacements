public:
    vector<vector<string>> Anagrams(vector<string>& string_list) {
        vector<vector<string>> result; // To store the final grouped anagrams
        
        unordered_map<string, vector<string>> mp; // Map to store sorted string as key and list of original strings as value
        
        // Populate the map with sorted string as key
        for (const string& str : string_list) {
            string sorted = str; // Copy the original string
            sort(sorted.begin(), sorted.end()); // Sort the string to get the key
            mp[sorted].push_back(str); // Add the original string to the map
        }
        
        // Collect results while maintaining the order of appearance of keys
        for (const auto& entry : mp) {
            result.push_back(entry.second); // Push the group of anagrams into the result vector
        }
        
        return result; // Return the final result
    }
